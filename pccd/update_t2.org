* Update t2

** Without the jacobian
Update:
$$t_i^a \leftarrow t_i^a - \frac{r_i^a}{2fcc_a^a - 2fcc_i^i}$$

#+BEGIN_SRC f90 :comments org :tangle update_t2.irp.f
subroutine update_amplitudes_pccd(residue, t2)
  
  implicit none

  ! in
  double precision, intent(in)  :: residue(dim_list_act_orb, dim_list_virt_orb)

  ! out
  double precision, intent(out) :: t2(dim_list_act_orb, dim_list_virt_orb)

  ! internal
  integer                       :: i, a
  integer                       :: nO, nV

  nO = dim_list_act_orb
  nV = dim_list_virt_orb
  
  ! New amplitudes
  do a = 1, nV
    do i = 1, nO
      t2(i,a) = t2(i,a) - residue(i,a)/(2d0 * fcc_v(a) - 2d0 * fcc_o(i))
    enddo
  enddo

end  
#+END_SRC

** With the jacobian

Update of the amplitudes:
$$ t_i^a \leftarrow t_i^a - \sum_{jb} (J^{-1})_{ia,jb} r_j^b$$

#+BEGIN_SRC f90 :comments org :tangle update_t2.irp.f
subroutine update_amplitudes_pccd_w_J(residue, inv_t2_jacobian, t2)
  
  implicit none

  ! in
  double precision, intent(in)  :: residue(dim_list_act_orb, dim_list_virt_orb)
  double precision, intent(in)  :: inv_t2_jacobian(dim_list_act_orb, dim_list_virt_orb,dim_list_act_orb, dim_list_virt_orb)

  ! out
  double precision, intent(out) :: t2(dim_list_act_orb, dim_list_virt_orb)

  ! internal
  integer                       :: i,a,j,b
  integer                       :: nO, nV

  nO = dim_list_act_orb
  nV = dim_list_virt_orb
  
  ! New amplitudes
  do b = 1, nV
    do j = 1, nO
      do a = 1, nV
        do i = 1, nO
          t2(i,a) = t2(i,a) - inv_t2_jacobian(i,a,j,b) * residue(j,b)
        enddo
      enddo
    enddo
  enddo

end  
#+END_SRC
