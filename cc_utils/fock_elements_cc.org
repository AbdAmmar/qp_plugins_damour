* Fock matrices

** f_pp
#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, fock_matrix_pp, (dim_list_act_virt_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_p^p
  ! p: active or virtual MO
  END_DOC

  integer :: p, pa

  fock_matrix_pp = 0d0
  do pa = 1, dim_list_act_virt_orb
    p = list_act_virt(pa)
    fock_matrix_pp(pa) = fock_matrix_mo(p,p)
  enddo

END_PROVIDER
#+END_SRC

#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, fock_matrix_ii, (dim_list_act_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_i^i 
  ! i: active MO
  END_DOC

  integer :: i, ia

  fock_matrix_ii = 0d0
  do ia = 1, dim_list_act_orb
    i = list_act(ia)
    fock_matrix_ii(ia) = fock_matrix_mo(i,i)
  enddo

END_PROVIDER
#+END_SRC

#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, fock_matrix_aa, (dim_list_virt_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_a^a
  ! a: virtual MO
  END_DOC

  integer :: a, tmp_a

  fock_matrix_aa = 0d0
  do a = 1, dim_list_virt_orb
    tmp_a = list_virt(a)
    fock_matrix_aa(a) = fock_matrix_mo(tmp_a,tmp_a)
  enddo

END_PROVIDER
#+END_SRC

** Fock matrix
#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, f_pq, (dim_list_act_virt_orb, dim_list_act_virt_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_p^q 
  ! p: active or virtual spatial MO
  END_DOC

  integer :: p,q,tmp_p,tmp_q

  do q = 1, dim_list_act_virt_orb
    tmp_q = list_act_virt(q)
    do p = 1, dim_list_act_virt_orb
      tmp_p = list_act_virt(p)
      f_pq(p,q) = fock_matrix_mo(tmp_p,tmp_q)
    enddo
  enddo

END_PROVIDER
#+END_SRC

#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, f_vo, (dim_list_virt_orb, dim_list_act_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_a^i
  ! i: active spatial MO
  ! a: virtual spatial MO
  END_DOC

  integer :: i,a, tmp_a
  integer :: nO, nV

  nO = dim_list_act_orb
  nV = dim_list_virt_orb
  
  do i= 1, nO
    do a = 1, nV
      tmp_a= a + nO
      f_vo(a,i) = f_pq(tmp_a,i)
    enddo
  enddo

END_PROVIDER
#+END_SRC

#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, f_ov, (dim_list_act_orb, dim_list_virt_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_i^a
  ! i: active spatial MO
  ! a: virtual spatial MO
  END_DOC

  integer :: i,a, tmp_a
  integer :: nO, nV

  nO = dim_list_act_orb
  nV = dim_list_virt_orb
  
    do a = 1, nV
      tmp_a= a + nO
      do i = 1, nO
      f_ov(i,a) = f_pq(i,tmp_a)
    enddo
  enddo

END_PROVIDER
#+END_SRC

#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, f_oo, (dim_list_act_orb, dim_list_act_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_i^j
  ! i,j: active spatial MOs
  END_DOC

  integer :: i,j
  integer :: nO

  nO = dim_list_act_orb
  
  do j= 1, nO
    do i = 1, nO
      f_oo(i,j) = f_pq(i,j)
    enddo
  enddo

END_PROVIDER
#+END_SRC

#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, f_o, (dim_list_act_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_i^i
  ! i: active spatial MO
  END_DOC

  integer :: i
  integer :: nO

  nO = dim_list_act_orb
  
  do i = 1, nO
    f_o(i) = f_oo(i,i)
  enddo

END_PROVIDER
#+END_SRC

#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, f_vv, (dim_list_virt_orb, dim_list_virt_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_a^b
  ! a,b: virtual spatial MOs
  END_DOC

  integer :: a,b,tmp_a,tmp_b
  integer :: nO,nV

  nO = dim_list_act_orb
  nV = dim_list_virt_orb
  
  do b= 1, nV
    tmp_b = b + nO
    do a = 1, nV
      tmp_a = a + nO
      f_vv(a,b) = f_pq(tmp_a,tmp_b)
    enddo
  enddo

END_PROVIDER
#+END_SRC

#+BEGIN_SRC f90 :comments org :tangle fock_matrices.irp.f
BEGIN_PROVIDER [double precision, f_v, (dim_list_virt_orb)]

  implicit none

  BEGIN_DOC
  ! my fock matrix elements f_a^a
  ! a: virtual spatial MO
  END_DOC

  integer :: a
  integer :: nV

  nV = dim_list_virt_orb
  
  do a = 1, nV
    f_v(a) = f_vv(a,a)
  enddo

END_PROVIDER
#+END_SRC
